apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'war'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

dependencies {
    compile 'javax.inject:javax.inject-tck:1',
            'javax.servlet:servlet-api:2.5',

            'org.unitils:unitils:1.0-rc-4',

            'commons-dbcp:commons-dbcp:1.4',

            'com.h2database:h2:1.3.167',

            'ch.qos.logback:logback-classic:1.0.0',

            'commons-lang:commons-lang:2.6',

            'hsqldb:hsqldb:1.8.0.10',

            'org.jasig.cas:cas-client-core:3.1.9',

            'javassist:javassist:3.11.0.GA',

            'org.freemarker:freemarker:2.3.19',

            'org.hibernate:hibernate-core:4.1.7.Final',
            'org.hibernate:hibernate-annotations:3.5.6-Final',
            'org.hibernate:hibernate-validator:4.2.0.Final',
            'org.hibernate:hibernate-entitymanager:4.1.7.Final',

            'org.springframework:spring-jdbc:3.1.2.RELEASE',
            'org.springframework:spring-orm:3.1.0.RELEASE',
            'org.springframework.security:spring-security-core:3.1.2.RELEASE',
            'org.springframework:spring-core:3.1.1.RELEASE',
            'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',

            'mysql:mysql-connector-java:5.1.21',

            'com.dbdeploy:dbdeploy-ant:3.0M3'

    runtime 'cglib:cglib-nodep:2.2'

    testCompile 'junit:junit:4.10',
            'org.springframework:spring-test:3.1.1.RELEASE',
            'org.mockito:mockito-all:1.9.0',
            'org.testng:testng:6.1.1',
            'org.seleniumhq.selenium:selenium-java:2.25.0',
            'org.seleniumhq.selenium:selenium-firefox-driver:2.25.0',
            'org.seleniumhq.selenium:selenium-server:2.25.0'
}

jettyRun {
    contextPath = 'twu'
}

war {
    baseName = 'swapper'
}


test {
    exclude '**/functional/com/thoughtworks/**/*.*'
}

test.doFirst {
    resetdb.execute();
    updatedb.execute();
}

task functionalTest(type: Test, dependsOn: "test") {
    include '**/functional/com/thoughtworks/**/*.*'
}

functionalTest.doFirst {
    jettyRun.httpPort = 8080
    jettyRun.daemon = true
    jettyRun.execute()
}

[jettyRunWar, jettyStop]*.stopPort = 8081
[jettyRunWar, jettyStop]*.stopKey = 'stopKey'

functionalTest.doLast {
    jettyStop.execute()
}

project.ext {
    dbDriver = 'com.mysql.jdbc.Driver'
    dbUrl = 'jdbc:mysql://localhost:3306/swap?characterEncoding=utf-8'
    dbUsername = 'root'
    dbPassword = ''
}

task updatedb << {

    ant.taskdef(name: 'dbdeploy',
            classname: 'com.dbdeploy.AntTarget',
            classpath: configurations.compile.asPath)

    ant.dbdeploy(driver: dbDriver,
            url: dbUrl,
            userid: dbUsername,
            password: dbPassword,
            dir: 'src/main/dbsql',
            dbms: 'mysql',
            undooutputfile: 'src/main/dbsql/undo_last_change.sql')
}

task resetdb << {

    ant.sql(driver: dbDriver,
            url: 'jdbc:mysql://localhost:3306/',
            userid: dbUsername,
            password: dbPassword,
            encoding: 'UTF-8',
            classpath: configurations.compile.asPath) {
        fileset(file: 'src/main/dbsql/resetDatabase.sql')
    }
}

task undolastchange << {
    ant.sql(driver: dbDriver,
            url: dbUrl,
            userid: dbUsername,
            password: dbPassword,
            encoding: 'UTF-8',
            classpath: configurations.compile.asPath) {
        fileset(file: 'db/undo_last_change.sql')
    }
}

